# IPython log file

import matplotlib
matplotlib.use('Agg')
 import matplotlib.pyplot as plt
import numpy as np
a = np.random.randn(10000)
plt.hist(a)
#[Out]# (array([   19.,   132.,   611.,  1678.,  2820.,  2677.,  1491.,   467.,
#[Out]#           95.,    10.]), array([-3.67978   , -2.92974379, -2.17970759, -1.42967139, -0.67963518,
#[Out]#         0.07040102,  0.82043722,  1.57047343,  2.32050963,  3.07054583,
#[Out]#         3.82058203]), <a list of 10 Patch objects>)
1.0 == 1
#[Out]# True
plt.savefig ('1.3.2/Histogram')
%logstart -org 1.3.2/logs/Mathur_1.3.2.#.log
%logstart -ort 1.3.2/logs/Mathur_1.3.2.#.log
# Shaan Mathur 1.3.2 IPython Log
5 + 3
#[Out]# 8
5 + 3.
#[Out]# 8.0
7 * 2
#[Out]# 14
#Int
7*2.
#[Out]# 14.0
#float
#If you use a "." when mulitplying the result will be a float.
7/2
#[Out]# 3
7/2.
#[Out]# 3.5
# 7b. int/int returns a rounded down whole number (int) answer, but int/float returns the actual decimal answer.
a = 2
%logstop
 %logstart -ort 1.3.2/logs/Mathur_1.3.2.1.#.log
#8 assignment
student_age=16
23**43
#[Out]# 35834136918934220777541995677272642015423987712183913488967L
abs(-100000000)
#[Out]# 100000000
%run 1.3.2/Mathur_1.3.2.py
#It is easier to get everything correct and then run it in the file and harder in this shell prompt.
#If you have a lot of code it would be easy to locate and work on.
#It will clear space, and you can use the same variable in other places without conflict.
%run 1.3.2/Mathur_1.3.2.py
#Saying to them for a long time and translating everything at once.
%run 1.3.2/Mathur_1.3.2.py
hyp(3,4)
add_tip(3,4)
#[Out]# 15
%run 1.3.2/Mathur_1.3.2.py
hyp(3,4)
%run 1.3.2/Mathur_1.3.2.py
hyp(3,4)
#[Out]# 5.0
mean(3,4,7)
 %run 1.3.2/Mathur_1.3.2.py
mean(3,4,7)
 %run 1.3.2/Mathur_1.3.2.py
mean(3,4,7)
#[Out]# 4.666666666666667
 %run 1.3.2/Mathur_1.3.2.py
perimeter(2,2)
#[Out]# 8
#Conclusion 1. A program that creates work cited docs for me automatically.
%logstop
# Sat, 08 Dec 2018 05:24:28
#Conclusion 2. Integers, strings, floats, variables.
# Sat, 08 Dec 2018 05:25:37
#Conclusion 3. It has to be written one line at a time and the interface is less easy to use.
# Sat, 08 Dec 2018 05:27:55
#Conclusion 4. It keeps things neat, organized and helps prevent overlapping variables.
# Sat, 08 Dec 2018 05:29:02
%run 1.3.2/Mathur_1.3.2.py
# Sat, 08 Dec 2018 05:30:08
%run 1.3.2/Mathur_1.3.2.py
# Sat, 08 Dec 2018 05:31:12
#TO review all the functions and code we have done so far.
# Sat, 08 Dec 2018 05:31:16
%logstop
